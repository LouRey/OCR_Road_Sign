# ────────────────────────────────────────────────────────────────────────────────
# Base L4T-PyTorch officielle Jetson Nano (Torch + torchvision déjà optimisés)
# ────────────────────────────────────────────────────────────────────────────────
FROM nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3

# ────────────────────────────────────────────────────────────────────────────────
# 1) Installer dépendances système ARM (NumPy, OpenCV, Tesseract, etc.)
# ────────────────────────────────────────────────────────────────────────────────
RUN apt-get update && apt-get install -y \
    python3-numpy \                   
    python3-opencv \                  
    v4l-utils \                       
    tesseract-ocr libtesseract-dev libleptonica-dev \
    libjpeg-dev libpng-dev libtiff-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# ────────────────────────────────────────────────────────────────────────────────
# 2) Télécharger le modèle Tesseract français
# ────────────────────────────────────────────────────────────────────────────────
RUN mkdir -p /usr/share/tessdata && \
    curl -sSL https://github.com/tesseract-ocr/tessdata/raw/main/fra.traineddata \
         -o /usr/share/tessdata/fra.traineddata

# ────────────────────────────────────────────────────────────────────────────────
# 3) Copier et installer les bibliothèques Python depuis requirements-jetson.txt
# ────────────────────────────────────────────────────────────────────────────────
WORKDIR /app
COPY requirements-jetson.txt ./

RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements-jetson.txt && \
    \
    # Forcer compilation locale d’EasyOCR et d’Ultralytics (pas de wheel x86)
    #pip install --no-cache-dir --no-binary :all: easyocr==1.7.2 && \
    pip install --no-cache-dir --no-binary :all: ultralytics==8.3.115 ultralytics-thop==2.0.14

# ────────────────────────────────────────────────────────────────────────────────
# 4) Copier tout le code de l’application (app.py et dossiers) dans /app
# ────────────────────────────────────────────────────────────────────────────────
COPY . /app

# ────────────────────────────────────────────────────────────────────────────────
# 5) Point d’entrée : lancer Streamlit sur le port 8501
# ────────────────────────────────────────────────────────────────────────────────
CMD ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0"]
